[{"D:\\react\\temp\\src\\index.js":"1","D:\\react\\temp\\src\\reportWebVitals.js":"2","D:\\react\\temp\\src\\App.js":"3","D:\\react\\temp\\src\\Table.js":"4","D:\\react\\temp\\src\\fetchuser.js":"5","D:\\react\\temp\\src\\pagination\\pagination.js":"6","D:\\react\\temp\\src\\postUser.js":"7","D:\\react\\temp\\src\\adduser\\AddUser.jsx":"8","D:\\react\\temp\\src\\adduser\\addUserWindow.jsx":"9"},{"size":517,"mtime":1620815573523,"results":"10","hashOfConfig":"11"},{"size":375,"mtime":1620815573553,"results":"12","hashOfConfig":"11"},{"size":359,"mtime":1622143949565,"results":"13","hashOfConfig":"11"},{"size":2951,"mtime":1621945233933,"results":"14","hashOfConfig":"11"},{"size":286,"mtime":1621944112094,"results":"15","hashOfConfig":"11"},{"size":2272,"mtime":1622127790579,"results":"16","hashOfConfig":"11"},{"size":689,"mtime":1622139927485,"results":"17","hashOfConfig":"11"},{"size":1535,"mtime":1622207033121,"results":"18","hashOfConfig":"11"},{"size":3498,"mtime":1622207150290,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"49nil7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react\\temp\\src\\index.js",[],["41","42"],"D:\\react\\temp\\src\\reportWebVitals.js",[],"D:\\react\\temp\\src\\App.js",[],"D:\\react\\temp\\src\\Table.js",["43","44"],"import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport FetchUser from './fetchuser';\r\nimport Pagination from './pagination/pagination'\r\n\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'email', label: 'email', minWidth: 100 },\r\n  { id: 'gender', label: 'gender', minWidth: 100 },\r\n  { id: 'status', label: 'status', minWidth: 100 },  \r\n];\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 640,\r\n  },\r\n});\r\n\r\nexport const UserTable=()=> {\r\n\r\n\r\n  const [rows, setUsersData] = useState([]);\r\n  const [totalpages, setTotalPages] = useState([]);\r\n  const [pageNo, setPageNo] = useState(1);\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    getdata()\r\n  })\r\n  \r\n\r\n  async function getdata() {\r\n    var data = await FetchUser(pageNo)\r\n    setUsersData(data.data)\r\n    setTotalPages(data.meta.pagination.pages);\r\n  }\r\n\r\n  \r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(20);\r\n\r\n  \r\n  const new_page = (onPage) => {\r\n    setPageNo(onPage)    \r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\r\n              return (\r\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                  {columns.map((column) => {\r\n                    const value = row[column.id];\r\n                    return (\r\n                      <TableCell key={column.id} align={column.align}>\r\n                        {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Pagination onPage = {new_page} currentPage = {pageNo} totalPages = {totalpages}/>\r\n    </Paper>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","D:\\react\\temp\\src\\fetchuser.js",[],"D:\\react\\temp\\src\\pagination\\pagination.js",["45","46"],"import React from 'react'\r\nimport './pagination.css'\r\nimport { useState, useEffect } from 'react';\r\nimport SkipNextRoundedIcon from '@material-ui/icons/SkipNextRounded';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      background: '#ff2f20',\r\n      color: 'white',\r\n      width:120,\r\n      fontWeight:'1000',\r\n    //   fontSize:'13px',\r\n      marginLeft:10,\r\n      marginTop : -3\r\n    },\r\n    backwardicon : {\r\n        opacity: '1.0',\r\n        cursor:'pointer',\r\n        display: 'inline',\r\n        marginTop: 10,\r\n        marginRight: 20, \r\n        height:30\r\n    },\r\n    forwardicon : {\r\n        opacity: '1.0',\r\n        cursor:'pointer',\r\n        display: 'inline',\r\n        marginTop: 10,\r\n        marginLeft : 20,\r\n        height:30\r\n    }\r\n\r\n  });\r\n\r\nconst Pagination = ({onPage, currentPage, totalPages}) => {\r\n\r\n    const [page, setPage] = useState(1)\r\n    const classes = useStyles()\r\n\r\n    const getPage = () => {\r\n        if(isNaN(page)){\r\n            page = 1\r\n        }    \r\n        onPage(parseInt(page))\r\n    }\r\n\r\n    const Back = (e) => {\r\n        if(currentPage!==1){\r\n            currentPage = currentPage - 1;\r\n        }\r\n        onPage(parseInt(currentPage))\r\n    }\r\n\r\n    const Next = (e) => {\r\n        if(currentPage!== totalPages)\r\n            currentPage = currentPage + 1;\r\n        onPage(parseInt(currentPage))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"pagination\">    \r\n                <SkipPreviousIcon className = {classes.backwardicon} onClick = { (e) =>   Back(e)}/>\r\n                <div className = \"pagelabel\"> \r\n                 Page {currentPage} from {totalPages} pages\r\n                </div>\r\n                \r\n                <Button variant=\"contained\" color = \"primary\" className = {classes.root} onClick = {getPage}> Page </Button>\r\n                <input type = \"number\" className = \"skiptoinput\" onChange = { (e) => setPage(e.target.value)}></input>\r\n                <SkipNextRoundedIcon className = {classes.forwardicon} onClick = { (e) => Next(e)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","D:\\react\\temp\\src\\postUser.js",[],"D:\\react\\temp\\src\\adduser\\AddUser.jsx",[],"D:\\react\\temp\\src\\adduser\\addUserWindow.jsx",["47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":53,"column":16,"nodeType":"54","messageId":"55","endLine":53,"endColumn":23},{"ruleId":"52","severity":1,"message":"56","line":54,"column":23,"nodeType":"54","messageId":"55","endLine":54,"endColumn":37},{"ruleId":"52","severity":1,"message":"57","line":3,"column":20,"nodeType":"54","messageId":"55","endLine":3,"endColumn":29},{"ruleId":"58","severity":1,"message":"59","line":45,"column":13,"nodeType":"54","messageId":"60","endLine":45,"endColumn":17},{"ruleId":"52","severity":1,"message":"57","line":4,"column":20,"nodeType":"54","messageId":"55","endLine":4,"endColumn":29},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'setPage' is assigned a value but never used.","Identifier","unusedVar","'setRowsPerPage' is assigned a value but never used.","'useEffect' is defined but never used.","no-const-assign","'page' is constant.","const","no-global-assign","no-unsafe-negation"]