[{"D:\\react\\temp\\src\\index.js":"1","D:\\react\\temp\\src\\reportWebVitals.js":"2","D:\\react\\temp\\src\\App.js":"3","D:\\react\\temp\\src\\Table.js":"4","D:\\react\\temp\\src\\fetchuser.js":"5","D:\\react\\temp\\src\\pagination\\pagination.js":"6"},{"size":517,"mtime":1620815573523,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1620815573553,"results":"9","hashOfConfig":"8"},{"size":246,"mtime":1621945111919,"results":"10","hashOfConfig":"8"},{"size":2951,"mtime":1621945233933,"results":"11","hashOfConfig":"8"},{"size":286,"mtime":1621944112094,"results":"12","hashOfConfig":"8"},{"size":2304,"mtime":1621944112212,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"49nil7",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"D:\\react\\temp\\src\\index.js",[],["28","29"],"D:\\react\\temp\\src\\reportWebVitals.js",[],"D:\\react\\temp\\src\\App.js",[],"D:\\react\\temp\\src\\Table.js",["30","31"],"D:\\react\\temp\\src\\fetchuser.js",[],"D:\\react\\temp\\src\\pagination\\pagination.js",["32","33","34"],"import React from 'react'\r\nimport './pagination.css'\r\nimport { useState, useEffect } from 'react';\r\nimport SkipNextRoundedIcon from '@material-ui/icons/SkipNextRounded';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      background: '#ff2f20',\r\n      color: 'white',\r\n      width:120,\r\n      fontWeight:'1000',\r\n    //   fontSize:'13px',\r\n      marginLeft:10,\r\n      marginTop : -3\r\n    },\r\n    backwardicon : {\r\n        opacity: '1.0',\r\n        cursor:'pointer',\r\n        display: 'inline',\r\n        marginTop: 10,\r\n        marginLeft:500, \r\n        height:15\r\n    },\r\n    forwardicon : {\r\n        opacity: '1.0',\r\n        cursor:'pointer',\r\n        display: 'inline',\r\n        marginTop: 10,\r\n        height:30\r\n    }\r\n\r\n  });\r\n\r\nconst Pagination = ({onPage, currentPage, totalPages}) => {\r\n\r\n    const [page, setPage] = useState(1)\r\n    const classes = useStyles()\r\n\r\n    const getPage = () => {\r\n        if(isNaN(page)){\r\n            page = 1\r\n        }    \r\n        onPage(parseInt(page))\r\n    }\r\n\r\n    const Back = (e) => {\r\n        if(currentPage!==1){\r\n            currentPage = currentPage - 1;\r\n        }\r\n        onPage(parseInt(currentPage))\r\n    }\r\n\r\n    const Next = (e) => {\r\n        if(currentPage!== totalPages)\r\n            currentPage = currentPage + 1;\r\n        onPage(parseInt(currentPage))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"pagination\">    \r\n                <ArrowBackIosIcon className = {classes.backwardicon} onClick = { (e) =>   Back(e)}/>\r\n                <div className = \"pagelabel\"> \r\n                 Page {currentPage} from total {totalPages} pages\r\n                </div>\r\n                <SkipNextRoundedIcon className = {classes.forwardicon} onClick = { (e) => Next(e)}/>\r\n                <Button variant=\"contained\" color = \"primary\" className = {classes.root} onClick = {getPage}> Page </Button>\r\n                <input type = \"number\" className = \"skiptoinput\" onChange = { (e) => setPage(e.target.value)}></input>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":53,"column":16,"nodeType":"41","messageId":"42","endLine":53,"endColumn":23},{"ruleId":"39","severity":1,"message":"43","line":54,"column":23,"nodeType":"41","messageId":"42","endLine":54,"endColumn":37},{"ruleId":"39","severity":1,"message":"44","line":3,"column":20,"nodeType":"41","messageId":"42","endLine":3,"endColumn":29},{"ruleId":"39","severity":1,"message":"45","line":6,"column":8,"nodeType":"41","messageId":"42","endLine":6,"endColumn":27},{"ruleId":"46","severity":1,"message":"47","line":45,"column":13,"nodeType":"41","messageId":"48","endLine":45,"endColumn":17},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'setPage' is assigned a value but never used.","Identifier","unusedVar","'setRowsPerPage' is assigned a value but never used.","'useEffect' is defined but never used.","'ArrowForwardIosIcon' is defined but never used.","no-const-assign","'page' is constant.","const","no-global-assign","no-unsafe-negation"]